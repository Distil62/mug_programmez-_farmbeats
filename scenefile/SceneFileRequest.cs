// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using scenefile;
//
//    var sceneFileRequest = SceneFileRequest.FromJson(jsonString);

namespace scenefile
{
    using System;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SceneFileRequest
    {
        [JsonProperty("sceneId")]
        public String SceneId { get; set; }

        [JsonProperty("contentType")]
        public string ContentType { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class SceneFileRequest
    {
        public static SceneFileRequest FromJson(string json) => JsonConvert.DeserializeObject<SceneFileRequest>(json, scenefile.ConverterSceneFileRequest.Settings);
    }

    public static class SerializeSceneFileRequest
    {
        public static string ToJson(this SceneFileRequest self) => JsonConvert.SerializeObject(self, scenefile.ConverterSceneFileRequest.Settings);
    }

    internal static class ConverterSceneFileRequest
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
